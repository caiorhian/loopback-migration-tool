{"version":3,"sources":["seeder.js"],"names":["argv","app","promises","map","models","Model","isFunction","destroyAll","resolve","all","reject","src","err","files","chain","sort","file","isAbsolute","process","cwd","seeder","require","default","length","promisify","value","then","catch"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;0EAEe,iBAAgBA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,2BADO,GACD,sBAAUD,KAAKC,GAAf,CADC;AAGPC,gCAHO,GAGI,iBAAEC,GAAF,CAAMF,IAAIG,MAAV,EAAkB,UAACC,KAAD;AAAA,mCAAW,iBAAEC,UAAF,CAAaD,MAAME,UAAnB,IAAiCF,MAAME,UAAN,EAAjC,GAAsD,mBAAQC,OAAR,EAAjE;AAAA,yBAAlB,CAHJ;AAAA;AAAA,+BAIL,mBAAQC,GAAR,CAAYP,QAAZ,CAJK;;AAAA;AAAA;AAAA,+BAME,uBAAY,UAAUM,OAAV,EAAmBE,MAAnB,EAA2B;AAChD,gDAAKV,KAAKW,GAAV,EAAe,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACjC,oCAAID,GAAJ,EAAS,OAAOF,OAAOE,GAAP,CAAP;AACTV,2CAAW,iBAAEY,KAAF,CAAQD,KAAR,EAAeE,IAAf,GAAsBZ,GAAtB,CAA0B,UAAUa,IAAV,EAAgB;AACjD,wCAAI,CAAC,eAAKC,UAAL,CAAgBD,IAAhB,CAAL,EAA4B;AACxBA,+CAAUE,QAAQC,GAAR,EAAV,SAA2BH,IAA3B;AACH;;AAED,wCAAII,SAASC,QAAQL,IAAR,CAAb;AACA,wCAAI,CAAC,iBAAEV,UAAF,CAAac,MAAb,CAAD,IAAyBA,OAAOE,OAApC,EAA6C;AACzCF,iDAASA,OAAOE,OAAhB;AACH;AACD,wCAAIF,OAAOG,MAAP,KAAkB,CAAtB,EAAyB;AACrBH,iDAAS,mBAAQI,SAAR,CAAkBJ,MAAlB,CAAT;AACH;AACD,2CAAOA,OAAOnB,GAAP,CAAP;AACH,iCAbU,EAaRwB,KAbQ,EAAX;AAcA,mDAAQhB,GAAR,CAAYP,QAAZ,EACKwB,IADL,CACUlB,OADV,EAEKmB,KAFL,CAEWjB,MAFX;AAGH,6BAnBD;AAoBH,yBArBY,CANF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K","file":"seeder.js","sourcesContent":["\"use strict\"\n/**\n * Created by garusis on 31/01/17.\n */\nimport _ from \"lodash\"\nimport glob from \"glob\"\nimport Promise from \"bluebird\"\nimport path from \"path\"\nimport debug from \"debug\"\nimport {appLoader} from \"./utils\"\n\nexport default async function (argv) {\n    let app = appLoader(argv.app)\n\n    let promises = _.map(app.models, (Model) => _.isFunction(Model.destroyAll) ? Model.destroyAll() : Promise.resolve())\n    await Promise.all(promises)\n\n    return await new Promise(function (resolve, reject) {\n        glob(argv.src, function (err, files) {\n            if (err) return reject(err)\n            promises = _.chain(files).sort().map(function (file) {\n                if (!path.isAbsolute(file)) {\n                    file = `${process.cwd()}/${file}`\n                }\n\n                let seeder = require(file)\n                if (!_.isFunction(seeder) && seeder.default) {\n                    seeder = seeder.default\n                }\n                if (seeder.length === 2) {\n                    seeder = Promise.promisify(seeder)\n                }\n                return seeder(app)\n            }).value()\n            Promise.all(promises)\n                .then(resolve)\n                .catch(reject)\n        })\n    })\n}"],"sourceRoot":"./"}