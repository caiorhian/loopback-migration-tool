{"version":3,"sources":["seeder.js"],"names":["argv","app","resolve","reject","src","err","files","promises","map","file","isAbsolute","process","cwd","seeder","require","isFunction","default","length","promisify","all","then","catch"],"mappings":"AAAA;AACA;;;;;;;;kBAUe,UAAUA,IAAV,EAAgB;AAC3B,QAAIC,MAAM,sBAAUD,KAAKC,GAAf,CAAV;;AAEA,WAAO,uBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,4BAAKH,KAAKI,GAAV,EAAe,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACjC,gBAAID,GAAJ,EAAS,OAAOF,OAAOE,GAAP,CAAP;AACT,gBAAIE,WAAW,iBAAEC,GAAF,CAAMF,KAAN,EAAa,UAAUG,IAAV,EAAgB;AACxC,oBAAI,CAAC,eAAKC,UAAL,CAAgBD,IAAhB,CAAL,EAA4B;AACxBA,2BAASE,QAAQC,GAAR,EAAT,SAA0BH,IAA1B;AACH;;AAED,oBAAII,SAASC,QAAQL,IAAR,CAAb;AACA,oBAAG,CAAC,iBAAEM,UAAF,CAAaF,MAAb,CAAD,IAAyBA,OAAOG,OAAnC,EAA2C;AACvCH,6BAASA,OAAOG,OAAhB;AACH;AACD,oBAAGH,OAAOI,MAAP,KAAkB,CAArB,EAAuB;AACnBJ,6BAAS,mBAAQK,SAAR,CAAkBL,MAAlB,CAAT;AACH;AACD,uBAAOA,OAAOZ,GAAP,CAAP;AACH,aAbc,CAAf;AAcA,+BAAQkB,GAAR,CAAYZ,QAAZ,EACKa,IADL,CACUlB,OADV,EAEKmB,KAFL,CAEWlB,MAFX;AAGH,SAnBD;AAoBH,KArBM,CAAP;AAsBH,C;;AAhCD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA","file":"seeder.js","sourcesContent":["\"use strict\"\n/**\n * Created by garusis on 31/01/17.\n */\nimport _ from \"lodash\"\nimport glob from \"glob\"\nimport Promise from \"bluebird\"\nimport path from \"path\"\nimport debug from \"debug\"\nimport {appLoader} from \"./utils\"\n\nexport default function (argv) {\n    let app = appLoader(argv.app)\n\n    return new Promise(function (resolve, reject) {\n        glob(argv.src, function (err, files) {\n            if (err) return reject(err)\n            let promises = _.map(files, function (file) {\n                if (!path.isAbsolute(file)) {\n                    file= `${process.cwd()}/${file}`\n                }\n\n                let seeder = require(file)\n                if(!_.isFunction(seeder) && seeder.default){\n                    seeder = seeder.default\n                }\n                if(seeder.length === 2){\n                    seeder = Promise.promisify(seeder)\n                }\n                return seeder(app)\n            })\n            Promise.all(promises)\n                .then(resolve)\n                .catch(reject)\n        })\n    })\n}"],"sourceRoot":"./"}